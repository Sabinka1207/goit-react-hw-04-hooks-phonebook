{"version":3,"sources":["Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","preventDefault","className","css","form","label","type","pattern","title","required","onChange","submit","ContactList","contacts","onDeleteContact","allContacts","map","contact","delete","onClick","id","Filter","filter","App","setContacts","setFilter","useEffect","localStorage","getItem","parcedContacts","JSON","parse","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","includes","normalizedName","doubledNames","length","Notiflix","Report","warning","shortid","generate","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.32ee368b.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport css from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n    const [name, setName] = useState('')\r\n    const [number, setNumber] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        setName('')\r\n        setNumber('')\r\n    }\r\n\r\n    const handleChange = e => {\r\n        // this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n\r\n        switch (e.currentTarget.name) {\r\n            case 'name':\r\n                setName(e.currentTarget.value)\r\n                break;\r\n            case 'number':\r\n                setNumber(e.currentTarget.value)\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={css.form}>\r\n            <label className={css.label}>\r\n        Name\r\n        <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleChange}\r\n        />\r\n\r\n        </label>\r\n            \r\n        <label className={css.label}>\r\n            Number\r\n            <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n            />\r\n\r\n        </label>\r\n\r\n            <button type=\"submit\" className={css.submit}>Add name</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default ContactForm","import css from './ContactList.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n\r\n    return (\r\n        <ul className={ css.allContacts}>\r\n            {contacts.map(contact => (\r\n                <li key={contact.id} className={css.contact}>\r\n                    <span>{contact.name}: {contact.number}</span>\r\n                    <button className={css.delete} type=\"button\" onClick={()=> onDeleteContact(contact.id)}>Delete</button>\r\n                </li>))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    })).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList\r\n","import PropTypes from 'prop-types'\r\n\r\nfunction Filter({ onChange, filter }) {\r\n    return (\r\n        <label>\r\n            Filter by name:\r\n            <input type=\"text\" value={filter} onChange={onChange}></input>\r\n        </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    filter: PropTypes.string\r\n}\r\n\r\nexport default Filter","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport shortid from \"shortid\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Notiflix from \"notiflix\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const addContact = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    const doubledNames = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedName)\n    ).length;\n    if (!doubledNames) {\n      const contact = {\n        id: shortid.generate(),\n        name: name,\n        number: number,\n      };\n      setContacts((contacts) => [contact, ...contacts]);\n    } else {\n      Notiflix.Report.warning(\n        \"Warning\",\n        `${name} is already in contacts`,\n        \"OK\"\n      );\n    }\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    if (contacts) {\n      const parcedContacts = JSON.parse(contacts);\n      setContacts(parcedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter onChange={changeFilter} value={filter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__17bJN\",\"submit\":\"ContactForm_submit__ICZHy\",\"label\":\"ContactForm_label__ZY0_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allContacts\":\"ContactList_allContacts__3RGqV\",\"contact\":\"ContactList_contact__RGBnl\",\"delete\":\"ContactList_delete__1iKJe\"};"],"sourceRoot":""}